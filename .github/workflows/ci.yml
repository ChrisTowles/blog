name: ci-main

on:
  push:
    branches:
      - main

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    environment: ci
    strategy:
      matrix:
        os: [ubuntu-latest] # macos-latest, windows-latest
        node: [22]

    env:
      NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_LICENSE }}


      # For what ever reason, this doesn't work, so set correct value in nuxt.config.ts for now.
      # NUXT_PUBLIC_GTAG_ID: ${{ secrets.NUXT_PUBLIC_GTAG_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4


      - name: Install pnpm 
        uses: pnpm/action-setup@v4
        with:
          # version: 9.5.0
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      #- name: Prepare
      #  run: pnpm run dev:prepare

      - name: Lint
        run: pnpm run lint

      - name: Typecheck
        run: pnpm run typecheck

      - name: Build
        run: pnpm run build:cf

      
      - name: deploy
        # deploy with wrangler instead of cloudflare/pages-action@v1 so things can be tested locally
        run: pnpm run deploy:main
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      #- name: Test
      #  run: pnpm run test run

      # - name: Version Check
      #   id: check
      #   uses: EndBug/version-check@v2
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Release
      #   if: github.event_name == 'push' && steps.check.outputs.changed == 'true'
      #   run: ./scripts/release.sh
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
